#!/bin/bash
#$ -N log.lepmap2_OrderMarkers
#$ -M jeremy.le-luyer.1@ulaval.ca
#$ -m beas
#$ -pe smp 16
#$ -l h_vmem=50G
#$ -l h_rt=150:00:00
#$ -cwd
#$ -S /bin/bash


INPUT="/home/jelel8/file_BEN_final_f"
DIR="/home/jelel8/Software/LepMap2/bin/"
MAP="map.Lod22.JsLod10_js.sizeLimit22.txt"
RECOMB="0.01 0.05"
CPU=16

for i in $(cat list_chr)
do
#Create Maps
java -cp $DIR OrderMarkers map=$MAP informativeMask=223 maxError=0.1 initRecombination="$RECOMB" data="$INPUT".linkage polishWindow=100 filterWindow=10 numThreads="$CPU" chromosome=$i > order.NoSex.Maxerror0.1.Mprior0.01.Sizelim22.infoMask23.$i.txt
done 

#evaluate order and compute LOD score pair-wise
#java -cp $DIR OrderMarkers evaluateOrder=ordeNoSex.txt data="$INPUT".linkage >ordeNoSex_evaluate.txt

#java -cp $DIR OrderMarkers evaluateOrder=ordeNoSex_evaluate.txt computeLODScores=1 data="$INPUT".linkage improveOrder=0 >ordeNoSex_compute.txt


: '
usage: java OrderMarkers [options] data=file1 [file2 file3...]
options:
         map=chromosome_map_file LG map file. Typically generated by SeparateChromosomes or JoinSingles.
                                 Either map or evaluateOrder must be provided
         data=file [file2 ...]   Loads input genotypes in LINKAGE Pre-makeped format from file, - for standard input
         removeMarkers=m1 [m2 ...] Remove markers m1 m2 ... from further analysis [not set]
         informativeMask=STR     Use only markers with informative father (1), mother(2), both patrents(3) or neither parent(0) [0123]
         families=f1 [f2 ...]    Use only families f1 f2 ... [not set]
         numMergeIterations=NUM  How many iterations are performed [6]
         chromosome=NUM          Order only one chromosome [not set]
         improveOrder=0          Disable order refinement by maximizing likelihood
         removeDuplicates=0      Disable removing of duplicate markers
         evaluateOrder=file      Loads the order of markers from a file
                                 Either map or evaluateOrder must be provided
         computeLODScores=1      Evaluate pair-wise LOD scores on the order given in evaluateOrder
         maxDistance=NUM         Maximum allowed recombination probability (when evaluating likelihoods) [inf]
         maxError=NUM            Maximum allowed haplotype error probability (when evaluating likelihoods)
         minError=NUM            Minimum allowed haplotype error probability (when evaluating likelihoods)
         useKosambi=1            Use Kosambi mapping function (instead of Haldane).
         polishWindow=NUM        Uses only a window of NUM markers in the polishing step to obtain speedup.
         filterWindow=NUM        Uses about 4 x NUM markers to decided whether it is needed to evaluate the full likelihood for all markers,
                                 to obtain speedup. Only activated with more than 32 x NUM markers.
         initRecombination=NUM [NUM2]   Initial recombination probability paternal [and maternal] [0.05, NUM2=NUM]
         initError=NUM           Initial haplotype error probability [0.01]
         learnErrorParameters=0  Disable error parameter learning [not set]
         learnRecombinationParameters=0 1 Disable paternal recombination rate learning [not set]
         learnRecombinationParameters=0 0 Disable recombination rate learning [not set]
         learnRecombinationParameters=1 0 Disable maternal recombination rate learning [not set]
         sexAveraged=1           Use sex-averaged recombination rates
         alpha=NUM               Penalty parameter. The optimization score is 'likelihood - alpha*COUNT' [0.0]
         markerClusters=file     Load duplicated markers from a file, file should contain two columns, marker name and cluster ID
         missingClusteringLimit=NUM  Allow missing rate of NUM when deciding whether two markers are duplicates [0.0] (exprimental)
         hammingClusteringLimit=NUM  Allow hamming difference rate of NUM when deciding whether two markers are duplicates [0.0] (exprimental)
	 numThreads=NUM		CPUs
'
